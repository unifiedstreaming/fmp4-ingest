cmake_minimum_required(VERSION 3.12)
project (ingest-tools)
include_directories("${PROJECT_SOURCE_DIR}")
link_directories("${PROJECT_SOURCE_DIR}")
add_subdirectory(event)
if(UNIX)
find_package(CURL REQUIRED)
find_package(Threads REQUIRED)
endif()

if(CMAKE_COMPILER_IS_GNUCXX)
    include(CheckCXXCompilerFlag)
    CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)

    if(COMPILER_SUPPORTS_CXX11)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
    endif()
endif()

#add_library (fmp4stream fmp4stream.cpp fmp4stream.h)
add_executable(fmp4ingest ${CMAKE_CURRENT_SOURCE_DIR}/fmp4ingest.cpp ${CMAKE_CURRENT_SOURCE_DIR}/event/fmp4stream.cpp ${CMAKE_CURRENT_SOURCE_DIR}/event/event_track.cpp ${CMAKE_CURRENT_SOURCE_DIR}/event/fmp4stream.h ${CMAKE_CURRENT_SOURCE_DIR}/event/base64.cpp ${CMAKE_CURRENT_SOURCE_DIR}/event/base64.h ${CMAKE_CURRENT_SOURCE_DIR}/event/event_track.h)
target_link_libraries(fmp4ingest ${CURL_LIBRARIES})

if($ENV{CURL_LIBRARY_DIR})
link_directories(fmp4ingest $ENV{CURL_LIBRARY_DIR})
endif()

if(UNIX)
if(THREADS_HAVE_PTHREAD_ARG)
  target_compile_options(fmp4ingest PUBLIC "-pthread")
endif()
endif()

if(CMAKE_THREAD_LIBS_INIT)
  target_link_libraries(fmp4ingest "${CMAKE_THREAD_LIBS_INIT}")
endif()

add_executable(fmp4dump fmp4dump.cpp ${CMAKE_CURRENT_SOURCE_DIR}/event/fmp4stream.cpp ${CMAKE_CURRENT_SOURCE_DIR}/event/fmp4stream.h ${CMAKE_CURRENT_SOURCE_DIR}/event/base64.cpp ${CMAKE_CURRENT_SOURCE_DIR}/event/base64.h)
#target_include_directories(fmp4ingest ${CMAKE_CURRENT_SOURCE_DIR}/event/)
add_executable(fmp4_init fmp4_init.cpp ${CMAKE_CURRENT_SOURCE_DIR}/event/fmp4stream.cpp ${CMAKE_CURRENT_SOURCE_DIR}/event/fmp4stream.h ${CMAKE_CURRENT_SOURCE_DIR}/event/base64.cpp ${CMAKE_CURRENT_SOURCE_DIR}/event/base64.h)
#target_include_directories(fmp4ingest ${CMAKE_CURRENT_SOURCE_DIR}/event/)
add_executable(unittests unittest.cpp ${CMAKE_CURRENT_SOURCE_DIR}/event/catch.hpp ${CMAKE_CURRENT_SOURCE_DIR}/event/event_track.cpp ${CMAKE_CURRENT_SOURCE_DIR}/event/fmp4stream.cpp ${CMAKE_CURRENT_SOURCE_DIR}/event/fmp4stream.h ${CMAKE_CURRENT_SOURCE_DIR}/event/base64.h ${CMAKE_CURRENT_SOURCE_DIR}/event/base64.cpp ${CMAKE_CURRENT_SOURCE_DIR}/event/event_track.h)
#target_include_directories(fmp4ingest ${CMAKE_CURRENT_SOURCE_DIR}/event/)

add_executable(push_markers push_markers.cpp ${CMAKE_CURRENT_SOURCE_DIR}/event/fmp4stream.cpp ${CMAKE_CURRENT_SOURCE_DIR}/event/event_track.cpp ${CMAKE_CURRENT_SOURCE_DIR}/event/fmp4stream.h ${CMAKE_CURRENT_SOURCE_DIR}/event/base64.cpp ${CMAKE_CURRENT_SOURCE_DIR}/event/base64.h ${CMAKE_CURRENT_SOURCE_DIR}/event/event_track.h)
if($ENV{CURL_LIBRARY_DIR})
	link_directories(push_markers $ENV{CURL_LIBRARY_DIR})
endif()
target_link_libraries(push_markers ${CURL_LIBRARIES})
